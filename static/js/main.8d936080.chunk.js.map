{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["placeStarOfDavidInCanvas","width","height","canvas","i","row","j","push","createCanvas","starMatrix","Math","floor","spaceWidth","matrix","repeat","generateUpperTriangles","generateMiddleSection","generateLowerTriangles","generateStarOfDavid","min","starMatrixHeight","length","starMatrixWidth","startX","startY","canvasRowIndex","canvasColIndex","replaceCharAt","str","index","char","substring","App","_containerRef$current","_containerRef$current2","canvasWidth","setCanvasWidth","useState","canvasHeight","setCanvasHeight","setCanvas","containerRef","useRef","useEffect","handleResize","current","containerWidth","offsetWidth","containerHeight","offsetHeight","newCanvasWidth","newCanvasHeight","window","addEventListener","removeEventListener","generatedCanvas","cellSize","React","createElement","className","type","value","onChange","e","Number","target","max","ref","style","map","rowIndex","key","split","cell","cellIndex","concat","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.8d936080.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\n\nfunction createCanvas(width, height) {\n  const canvas = [];\n  for (let i = 0; i < height; i++) {\n    let row = \"\";\n    for (let j = 0; j < width; j++) {\n      if (i < height / 10 || i >= (height * 9) / 10) row += \"*\";\n      else row += ` `;\n    }\n    canvas.push(row);\n  }\n  return canvas;\n}\n\nfunction placeStarOfDavidInCanvas(width, height) {\n  if (width < 10 || height < 10) {\n    width = 10;\n    height = 10;\n  }\n  const canvas = createCanvas(width, height);\n  const starHeight = Math.min(Math.floor(width / 4), Math.floor(height / 4));\n  const starMatrix = generateStarOfDavid(starHeight);\n\n  const starMatrixHeight = starMatrix.length;\n  const starMatrixWidth = starMatrix[Math.floor(starMatrixHeight / 2)].length;\n\n  const startX = Math.floor((width - starMatrixWidth) / 2);\n  const startY = Math.floor((height - starMatrixHeight) / 2);\n\n  for (let i = 0; i < starMatrix.length; i++) {\n    const row = starMatrix[i];\n    for (let j = 0; j < row.length; j++) {\n      if (row[j] === \"*\" || row[j] === \"0\") {\n        const canvasRowIndex = startY + i;\n        const canvasColIndex = startX + j;\n        if (\n          canvasRowIndex >= 0 &&\n          canvasRowIndex < height &&\n          canvasColIndex >= 0 &&\n          canvasColIndex < width\n        ) {\n          canvas[canvasRowIndex] = replaceCharAt(\n            canvas[canvasRowIndex],\n            canvasColIndex,\n            row[j]\n          );\n        }\n      }\n    }\n  }\n\n  return canvas;\n}\n\nfunction replaceCharAt(str, index, char) {\n  if (index > str.length - 1) return str;\n  return str.substring(0, index) + char + str.substring(index + 1);\n}\n\nfunction generateStarOfDavid(height) {\n  if (height < 4) height = 4;\n  height = Math.floor(height / 2);\n  const width = 2 * height - 1;\n  const spaceWidth = width;\n  const matrix = [];\n\n  generateUpperTriangles(matrix, height, width, spaceWidth);\n  generateMiddleSection(matrix, height, width, spaceWidth);\n  generateLowerTriangles(matrix, height, width, spaceWidth);\n  return matrix;\n}\n\nfunction generateUpperTriangles(matrix, height, width, spaceWidth) {\n  for (let i = 0; i < height; i++) {\n    let row = \"\";\n    row += \" \".repeat(spaceWidth);\n    for (let j = 0; j < width; j++) {\n      if (i === height - 1 || j === height - i - 1 || j === height + i - 1) {\n        row += \"*\";\n      } else {\n        row += \" \";\n      }\n    }\n    if (i !== height - 1) matrix.push(row);\n  }\n}\n\nfunction generateMiddleSection(matrix, height, width, spaceWidth) {\n  for (let i = 0; i < height; i++) {\n    let row = \"\";\n    for (let j = 0; j < width; j++) {\n      if (j === width - i - 1 || i === 0 || j === i) {\n        row += \"*\";\n      } else {\n        row += \" \";\n      }\n    }\n    if (i === 0) row += \"*\".repeat(spaceWidth);\n    else row += \" \".repeat(spaceWidth);\n    for (let j = 0; j < width; j++) {\n      if (i === 0 || j === i || j === width - i - 1) {\n        row += \"*\";\n      } else if (j === width - i - 1 || i === 0) {\n        row += \"0\";\n      } else {\n        row += \" \";\n      }\n    }\n    matrix.push(row);\n  }\n\n  for (let i = 1; i < height; i++) {\n    let row = \"\";\n    for (let j = 0; j < width; j++) {\n      if (j === height - i - 1 || j === height + i - 1 || i === height - 1) {\n        row += \"*\";\n      } else if (j === height + i - 1 || i === height - 1) {\n        row += \"0\";\n      } else {\n        row += \" \";\n      }\n    }\n    if (i !== height - 1) row += \" \".repeat(spaceWidth);\n    else row += \"*\".repeat(spaceWidth);\n    for (let j = 0; j < width; j++) {\n      if (j === height - i - 1 || j === height + i - 1 || i === height - 1) {\n        row += \"*\";\n      } else if (j === height - i - 1 || i === height - 1) {\n        row += \"0\";\n      } else {\n        row += \" \";\n      }\n    }\n    matrix.push(row);\n  }\n}\n\nfunction generateLowerTriangles(matrix, height, width, spaceWidth) {\n  for (let i = 0; i < height; i++) {\n    let row = \"\";\n    row += \" \".repeat(spaceWidth);\n    for (let j = 0; j < width; j++) {\n      if (i === 0 || j === i || j === width - i - 1) {\n        row += \"*\";\n      } else {\n        row += \" \";\n      }\n    }\n    if (i !== 0) matrix.push(row);\n  }\n}\n\nconst App = () => {\n  const [canvasWidth, setCanvasWidth] = useState(40);\n  const [canvasHeight, setCanvasHeight] = useState(20);\n  const [canvas, setCanvas] = useState([]);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (containerRef.current) {\n        const containerWidth = containerRef.current.offsetWidth;\n        const containerHeight = containerRef.current.offsetHeight;\n\n        const newCanvasWidth = Math.floor(containerWidth / 8);\n        const newCanvasHeight = Math.floor(containerHeight / 8);\n\n        setCanvasWidth(newCanvasWidth);\n        setCanvasHeight(newCanvasHeight);\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    const generatedCanvas = placeStarOfDavidInCanvas(canvasWidth, canvasHeight);\n    setCanvas(generatedCanvas);\n  }, [canvasWidth, canvasHeight]);\n\n  const cellSize = Math.min(\n    containerRef.current?.offsetWidth / canvasWidth || 0,\n    containerRef.current?.offsetHeight / canvasHeight || 0\n  );\n\n  return (\n    <div className=\"app\">\n      <div className=\"controls\">\n        <label>\n          Width:\n          <input\n            type=\"number\"\n            value={canvasWidth}\n            onChange={(e) => setCanvasWidth(Number(e.target.value))}\n            min=\"10\"\n            max=\"100\"\n          />\n        </label>\n        <label>\n          Height:\n          <input\n            type=\"number\"\n            value={canvasHeight}\n            onChange={(e) => setCanvasHeight(Number(e.target.value))}\n            min=\"10\"\n            max=\"100\"\n          />\n        </label>\n      </div>\n      <div\n        className=\"canvas-container\"\n        ref={containerRef}\n        style={{ width: \"80vw\", height: \"80vh\" }}\n      >\n        <div className=\"canvas-grid\">\n          {canvas.map((row, rowIndex) => (\n            <div className=\"canvas-row\" key={rowIndex}>\n              {row.split(\"\").map((cell, cellIndex) => (\n                <div\n                  key={cellIndex}\n                  className={`canvas-cell ${cell === \"*\" ? \"filled\" : \"\"}`}\n                  style={{ width: cellSize, height: cellSize }}\n                />\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}